plugins {
    id 'java-library-distribution'
    id 'jacoco'
    id 'maven-publish'
}

group = 'com.github.CST-Group'

description = "The Multipurpose Enhanced Cognitive Architecture (MECA)"

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '0.6.0'

repositories {
    flatDir {
        dirs '../cst/build/libs'
    }
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven {
        url "https://github.com/rosjava/rosjava_mvn_repo/raw/master"    }
    maven {
        url "https://repository.springsource.com/maven/bundles/release"    }
    maven {
        url "https://repository.springsource.com/maven/bundles/external"    }
}

dependencies {
    api('com.github.CST-Group:cst:0.7.0')
    api 'org.ros.rosjava_messages:std_msgs:0.5.11'
    //api ':cst:0.6.2-full'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'org.ros.rosjava_messages:std_msgs:0.5.11'
    testImplementation 'org.ros.rosjava_messages:rosjava_test_msgs:0.3.0'
}
// forces all changing dependencies (i.e. SNAPSHOTs) to automagicially download
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.runtimeClasspath.files.collect { it.getName() }.join(' ')
        )
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task uberJar(type: Jar) {
    archiveClassifier = 'full'
    manifest {
        attributes(
                'Class-Path': configurations.runtimeClasspath.files.collect { it.getName() }.join(' ')
        )

    }
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}
artifacts
        {
            archives javadocJar, sourcesJar, uberJar
        }

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}